name: E2E Testing
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:
  playwright:
    name: E2E-Test Application
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.53.0-noble
      options: --user 1001
    strategy:
      matrix:
        node-version:
          # current LTS
          - 22.x
        pnpm-version:
          # latest stable
          - 10.x
    steps:
      # Checkout the repository
      - uses: actions/checkout@v4

      # Setup Node.js and pnpm
      - name: Setup Node V${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Setup pnpm V${{ matrix.pnpm-version }}
        uses: pnpm/action-setup@v4
        with:
          version: ${{ matrix.pnpm-version }}
          run_install: false

      # Cache pnpm store
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ matrix.node-version }}-${{ matrix.pnpm-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-${{ matrix.node-version }}-${{ matrix.pnpm-version }}-

      # Install dependencies
      - name: Fetch dependencies
        run: pnpm fetch && pnpm install --offline

      # Run Tests
      - name: Test
        run: npx playwright test
        env:
          CI: 'true'
          FLOPPYBOT_CREDENTIALS: ${{ secrets.PLAYWRIGHT_USER }}
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: .playwright/html/
          retention-days: 30
